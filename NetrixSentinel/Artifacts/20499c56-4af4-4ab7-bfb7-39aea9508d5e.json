{
  "kind": "template",
  "properties": {
    "displayName": "EnableRiskIQSolutions",
    "description": "",
    "dependsOn": [],
    "template": {
      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
      "contentVersion": "1.0.0.0",
      "metadata": {
        "author": "Amarnath Pamidi - v-ampami@microsoft.com",
        "comments": "Solution template for RiskIQ"
      },
      "parameters": {
        "location": {
          "type": "string",
          "minLength": 1,
          "defaultValue": "[resourceGroup().location]",
          "metadata": {
            "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
          }
        },
        "workspace-location": {
          "type": "string",
          "minLength": 1,
          "defaultValue": "[parameters('location')]",
          "metadata": {
            "description": "Region to deploy solution resources"
          }
        },
        "playbook2-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Action-RiskIQ-Reputation-All",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook3-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Action-RiskIQ-Reputation-Domain",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook4-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Action-RiskIQ-Reputation-IP",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook5-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Data-PassiveDns-All",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook6-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Data-PassiveDns-Domain",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook7-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Data-PassiveDns-IP",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook8-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Data-Summary-All",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook9-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Data-Summary-Domain",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook10-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Data-Summary-IP",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook11-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Data-Whois-All",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook12-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Data-Whois-Domain",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook13-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Data-Whois-IP",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook14-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Intel-Summary-All",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook15-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Intel-Summary-Domain",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook16-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Intel-Summary-IP",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook17-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Reputation-Summary-All",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook18-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Reputation-Summary-Domain",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook19-PlaybookName": {
          "defaultValue": "Sentinel-Incident-Enrich-RiskIQ-Reputation-Summary-IP",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        },
        "playbook20-PlaybookName": {
          "defaultValue": "Sentinel-Intel-Action-RiskIQ-Intel-Article-Ingest",
          "type": "string",
          "minLength": 1,
          "metadata": {
            "description": "Resource name for the logic app playbook.  No spaces are allowed"
          }
        }
      },
      "variables": {
        "playbook-1-connection-1": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/riskiqpassivetotal')]",
        "_playbook-1-connection-1": "[variables('playbook-1-connection-1')]",
        "playbook-1-connection-2": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/microsoftgraphsecurity')]",
        "_playbook-1-connection-2": "[variables('playbook-1-connection-2')]",
        "playbook2-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook2-PlaybookName'))]",
        "playbook2-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook2-PlaybookName'))]",
        "playbook-2-connection-2": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/azuresentinel')]",
        "_playbook-2-connection-2": "[variables('playbook-2-connection-2')]",
        "playbook3-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook3-PlaybookName'))]",
        "playbook3-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook3-PlaybookName'))]",
        "playbook4-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook4-PlaybookName'))]",
        "playbook4-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook4-PlaybookName'))]",
        "playbook5-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook5-PlaybookName'))]",
        "playbook5-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook5-PlaybookName'))]",
        "playbook6-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook6-PlaybookName'))]",
        "playbook6-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook6-PlaybookName'))]",
        "playbook7-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook7-PlaybookName'))]",
        "playbook7-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook7-PlaybookName'))]",
        "playbook8-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook8-PlaybookName'))]",
        "playbook8-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook8-PlaybookName'))]",
        "playbook9-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook9-PlaybookName'))]",
        "playbook9-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook9-PlaybookName'))]",
        "playbook10-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook10-PlaybookName'))]",
        "playbook10-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook10-PlaybookName'))]",
        "playbook11-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook11-PlaybookName'))]",
        "playbook11-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook11-PlaybookName'))]",
        "playbook12-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook12-PlaybookName'))]",
        "playbook12-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook12-PlaybookName'))]",
        "playbook13-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook13-PlaybookName'))]",
        "playbook13-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook13-PlaybookName'))]",
        "playbook14-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook14-PlaybookName'))]",
        "playbook14-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook14-PlaybookName'))]",
        "playbook15-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook15-PlaybookName'))]",
        "playbook15-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook15-PlaybookName'))]",
        "playbook16-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook16-PlaybookName'))]",
        "playbook16-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook16-PlaybookName'))]",
        "playbook17-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook17-PlaybookName'))]",
        "playbook17-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook17-PlaybookName'))]",
        "playbook18-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook18-PlaybookName'))]",
        "playbook18-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook18-PlaybookName'))]",
        "playbook19-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook19-PlaybookName'))]",
        "playbook19-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook19-PlaybookName'))]",
        "playbook20-MicrosoftGraphSecurityConnectionName": "[concat('microsoftgraphsecurity-', parameters('playbook20-PlaybookName'))]",
        "playbook20-RiskIQConnectionName": "[concat('riskiqpassivetotal-', parameters('playbook20-PlaybookName'))]"
      },
      "resources": [
        {
          "name": "pid-0ddc98fa-9160-4919-bfa7-0a61f352fb86-partnercenter",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2020-10-01",
          "properties": {
            "mode": "Incremental",
            "template": {
              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "resources": []
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook2-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook2-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook2-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook2-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook2-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_Hosts": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/host"
                  },
                  "runAfter": {
                    "Init_Classification_Bit": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_IPs": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/ip"
                  },
                  "runAfter": {
                    "Init_Classification_Bit": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_Host": {
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>RiskIQ Reputation: @{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}<br> Classification: @{body('Get_reputation_for_host')?['classification']} (@{body('Get_reputation_for_host')?['score']})<br> @{body('Create_Host_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_Host_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Append_host_classification": {
                      "inputs": {
                        "name": "classification_bit",
                        "value": "@body('Get_reputation_for_host')?['classification']"
                      },
                      "runAfter": {
                        "Set_host_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToArrayVariable"
                    },
                    "Create_Host_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_host')"
                      },
                      "runAfter": {
                        "Append_host_classification": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "Get_reputation_for_host": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/reputation",
                        "queries": {
                          "query": "@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}"
                        }
                      },
                      "type": "ApiConnection"
                    },
                    "Set_host_variable": {
                      "inputs": {
                        "name": "result_output_host",
                        "value": "@body('Get_reputation_for_host')?['rules']"
                      },
                      "runAfter": {
                        "Get_reputation_for_host": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                  "runAfter": {
                    "Init_Result_Host": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "For_each_IP_Address": {
                  "actions": {
                    "Add_comment_to_incident_(V3)_2": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>RiskIQ Reputation: @{items('For_each_IP_Address')?['Address']}<br> Classification: @{body('Get_reputation')?['classification']} (@{body('Get_reputation')?['score']})<br> @{body('Create_IP_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_IP_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Append_ip_classification": {
                      "inputs": {
                        "name": "classification_bit",
                        "value": "@body('Get_reputation')?['classification']"
                      },
                      "runAfter": {
                        "Set_ip_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToArrayVariable"
                    },
                    "Create_IP_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_ip')"
                      },
                      "runAfter": {
                        "Append_ip_classification": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "Get_reputation": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/reputation",
                        "queries": {
                          "query": "@items('For_each_IP_Address')?['Address']"
                        }
                      },
                      "type": "ApiConnection"
                    },
                    "Set_ip_variable": {
                      "inputs": {
                        "name": "result_output_ip",
                        "value": "@body('Get_reputation')?['rules']"
                      },
                      "runAfter": {
                        "Get_reputation": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                  "runAfter": {
                    "Init_Result_IP": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Classification_Bit": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "classification_bit",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_Result_Host": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_host",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_Hosts": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_Result_IP": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_ip",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_IPs": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Malicious_or_Suspicious": {
                  "actions": {
                    "Condition_2": {
                      "actions": {
                        "Update_incident": {
                          "inputs": {
                            "body": {
                              "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                              "owner": "@body('Alert_-_Get_incident')?['properties']?['owner']?['objectId']",
                              "ownerAction": "Unassign",
                              "severity": "High",
                              "status": "Active",
                              "tagsToAdd": {
                                "TagsToAdd": [
                                  {
                                    "Tag": "RiskIQ Malicious"
                                  }
                                ]
                              }
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "put",
                            "path": "/Incidents"
                          },
                          "type": "ApiConnection"
                        }
                      },
                      "else": {
                        "actions": {
                          "Update_incident_2": {
                            "inputs": {
                              "body": {
                                "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                "owner": "@body('Alert_-_Get_incident')?['properties']?['owner']?['objectId']",
                                "ownerAction": "Unassign",
                                "severity": "Medium",
                                "status": "Active",
                                "tagsToAdd": {
                                  "TagsToAdd": [
                                    {
                                      "Tag": "RiskIQ Suspicious"
                                    }
                                  ]
                                }
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                              },
                              "method": "put",
                              "path": "/Incidents"
                            },
                            "type": "ApiConnection"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "contains": [
                              "@variables('classification_bit')",
                              "MALICIOUS"
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    }
                  },
                  "expression": {
                    "or": [
                      {
                        "contains": [
                          "@variables('classification_bit')",
                          "MALICIOUS"
                        ]
                      },
                      {
                        "contains": [
                          "@variables('classification_bit')",
                          "SUSPICIOUS"
                        ]
                      }
                    ]
                  },
                  "runAfter": {
                    "For_each_Host": [
                      "Succeeded"
                    ],
                    "For_each_IP_Address": [
                      "Succeeded"
                    ]
                  },
                  "type": "If"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook2-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook2-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook2-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook2-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook3-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook3-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook3-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook3-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook3-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_Hosts": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/host"
                  },
                  "runAfter": {
                    "Init_Classification_Bit": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_Host": {
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>RiskIQ Reputation: @{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}<br> Classification: @{body('Get_reputation_for_host')?['classification']} (@{body('Get_reputation_for_host')?['score']})<br> @{body('Create_Host_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_Host_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Append_host_classification": {
                      "inputs": {
                        "name": "classification_bit",
                        "value": "@body('Get_reputation_for_host')?['classification']"
                      },
                      "runAfter": {
                        "Set_host_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToArrayVariable"
                    },
                    "Create_Host_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_host')"
                      },
                      "runAfter": {
                        "Append_host_classification": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "Get_reputation_for_host": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/reputation",
                        "queries": {
                          "query": "@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}"
                        }
                      },
                      "type": "ApiConnection"
                    },
                    "Set_host_variable": {
                      "inputs": {
                        "name": "result_output_host",
                        "value": "@body('Get_reputation_for_host')?['rules']"
                      },
                      "runAfter": {
                        "Get_reputation_for_host": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                  "runAfter": {
                    "Init_Result_Host": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Classification_Bit": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "classification_bit",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_Result_Host": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_host",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_Hosts": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Malicious_or_Suspicious": {
                  "actions": {
                    "Condition_2": {
                      "actions": {
                        "Update_incident": {
                          "inputs": {
                            "body": {
                              "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                              "owner": "@body('Alert_-_Get_incident')?['properties']?['owner']?['objectId']",
                              "ownerAction": "Unassign",
                              "severity": "High",
                              "status": "Active",
                              "tagsToAdd": {
                                "TagsToAdd": [
                                  {
                                    "Tag": "RiskIQ Malicious"
                                  }
                                ]
                              }
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "put",
                            "path": "/Incidents"
                          },
                          "type": "ApiConnection"
                        }
                      },
                      "else": {
                        "actions": {
                          "Update_incident_2": {
                            "inputs": {
                              "body": {
                                "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                "owner": "@body('Alert_-_Get_incident')?['properties']?['owner']?['objectId']",
                                "ownerAction": "Unassign",
                                "severity": "Medium",
                                "status": "Active",
                                "tagsToAdd": {
                                  "TagsToAdd": [
                                    {
                                      "Tag": "RiskIQ Suspicious"
                                    }
                                  ]
                                }
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                              },
                              "method": "put",
                              "path": "/Incidents"
                            },
                            "type": "ApiConnection"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "contains": [
                              "@variables('classification_bit')",
                              "MALICIOUS"
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    }
                  },
                  "expression": {
                    "or": [
                      {
                        "contains": [
                          "@variables('classification_bit')",
                          "MALICIOUS"
                        ]
                      },
                      {
                        "contains": [
                          "@variables('classification_bit')",
                          "SUSPICIOUS"
                        ]
                      }
                    ]
                  },
                  "runAfter": {
                    "For_each_Host": [
                      "Succeeded"
                    ]
                  },
                  "type": "If"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook3-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook3-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook3-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook3-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook4-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook4-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook4-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook4-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook4-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_IPs": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/ip"
                  },
                  "runAfter": {
                    "Init_Classification_Bit": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_IP_Address": {
                  "actions": {
                    "Add_comment_to_incident_(V3)_2": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>RiskIQ Reputation: @{items('For_each_IP_Address')?['Address']}<br> Classification: @{body('Get_reputation')?['classification']} (@{body('Get_reputation')?['score']})<br> @{body('Create_IP_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_IP_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Append_ip_classification": {
                      "inputs": {
                        "name": "classification_bit",
                        "value": "@body('Get_reputation')?['classification']"
                      },
                      "runAfter": {
                        "Set_ip_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToArrayVariable"
                    },
                    "Create_IP_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_ip')"
                      },
                      "runAfter": {
                        "Append_ip_classification": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "Get_reputation": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/reputation",
                        "queries": {
                          "query": "@items('For_each_IP_Address')?['Address']"
                        }
                      },
                      "type": "ApiConnection"
                    },
                    "Set_ip_variable": {
                      "inputs": {
                        "name": "result_output_ip",
                        "value": "@body('Get_reputation')?['rules']"
                      },
                      "runAfter": {
                        "Get_reputation": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                  "runAfter": {
                    "Init_Result_IP": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Classification_Bit": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "classification_bit",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_Result_IP": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_ip",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_IPs": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Malicious_or_Suspicious": {
                  "actions": {
                    "Condition_2": {
                      "actions": {
                        "Update_incident": {
                          "inputs": {
                            "body": {
                              "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                              "owner": "@body('Alert_-_Get_incident')?['properties']?['owner']?['objectId']",
                              "ownerAction": "Unassign",
                              "severity": "High",
                              "status": "Active",
                              "tagsToAdd": {
                                "TagsToAdd": [
                                  {
                                    "Tag": "RiskIQ Malicious"
                                  }
                                ]
                              }
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "put",
                            "path": "/Incidents"
                          },
                          "type": "ApiConnection"
                        }
                      },
                      "else": {
                        "actions": {
                          "Update_incident_2": {
                            "inputs": {
                              "body": {
                                "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                "owner": "@body('Alert_-_Get_incident')?['properties']?['owner']?['objectId']",
                                "ownerAction": "Unassign",
                                "severity": "Medium",
                                "status": "Active",
                                "tagsToAdd": {
                                  "TagsToAdd": [
                                    {
                                      "Tag": "RiskIQ Suspicious"
                                    }
                                  ]
                                }
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                              },
                              "method": "put",
                              "path": "/Incidents"
                            },
                            "type": "ApiConnection"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "contains": [
                              "@variables('classification_bit')",
                              "MALICIOUS"
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    }
                  },
                  "expression": {
                    "or": [
                      {
                        "contains": [
                          "@variables('classification_bit')",
                          "MALICIOUS"
                        ]
                      },
                      {
                        "contains": [
                          "@variables('classification_bit')",
                          "SUSPICIOUS"
                        ]
                      }
                    ]
                  },
                  "runAfter": {
                    "For_each_IP_Address": [
                      "Succeeded"
                    ]
                  },
                  "type": "If"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook4-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook4-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook4-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook4-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook5-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook5-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook5-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook5-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook5-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_Hosts": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/host"
                  },
                  "runAfter": {
                    "Init_Lookback_Period": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_IPs": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/ip"
                  },
                  "runAfter": {
                    "Init_Lookback_Period": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_host": {
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>Last week of Passive DNS for @{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}<br> @{variables('domain_comment')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Condition": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Condition": {
                      "actions": {
                        "Create_Host_HTML_table": {
                          "inputs": {
                            "format": "HTML",
                            "from": "@variables('domain_results')"
                          },
                          "type": "Table"
                        },
                        "Set_domain_comment": {
                          "inputs": {
                            "name": "domain_comment",
                            "value": "@body('Create_Host_HTML_table')"
                          },
                          "runAfter": {
                            "Create_Host_HTML_table": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable"
                        }
                      },
                      "else": {
                        "actions": {
                          "Set_domain_comment_empty": {
                            "inputs": {
                              "name": "domain_comment",
                              "value": "No results found."
                            },
                            "type": "SetVariable"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(variables('domain_results'))",
                              0
                            ]
                          }
                        ]
                      },
                      "runAfter": {
                        "For_each_host_resolve": [
                          "Succeeded"
                        ]
                      },
                      "type": "If"
                    },
                    "For_each_host_resolve": {
                      "actions": {
                        "Append_to_array_variable": {
                          "inputs": {
                            "name": "domain_results",
                            "value": {
                              "First": "@body('Get_passive_DNS')?['firstSeen']",
                              "Last": "@body('Get_passive_DNS')?['lastSeen']",
                              "Type": "@items('For_each_host_resolve')?['recordType']",
                              "Value": "@items('For_each_host_resolve')?['resolve']"
                            }
                          },
                          "type": "AppendToArrayVariable"
                        }
                      },
                      "foreach": "@body('Get_passive_DNS')?['results']",
                      "runAfter": {
                        "Get_passive_DNS": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_passive_DNS": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/dns/passive",
                        "queries": {
                          "query": "@{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}",
                          "start": "@variables('lookback')",
                          "timeout": 7
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                  "runAfter": {
                    "Init_domain_comment": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "For_each_ip": {
                  "actions": {
                    "Add_comment_to_incident_(V3)_2": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>Last week of Passive DNS for @{items('For_each_ip')?['Address']}<br> @{variables('ip_comment')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Condition_2": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Condition_2": {
                      "actions": {
                        "Create_IP_HTML_table": {
                          "inputs": {
                            "format": "HTML",
                            "from": "@variables('ip_results')"
                          },
                          "type": "Table"
                        },
                        "Set_ip_comment": {
                          "inputs": {
                            "name": "ip_comment",
                            "value": "@body('Create_IP_HTML_table')"
                          },
                          "runAfter": {
                            "Create_IP_HTML_table": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable"
                        }
                      },
                      "else": {
                        "actions": {
                          "Set_variable": {
                            "inputs": {
                              "name": "ip_comment",
                              "value": "No results found."
                            },
                            "type": "SetVariable"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(variables('ip_results'))",
                              0
                            ]
                          }
                        ]
                      },
                      "runAfter": {
                        "For_each_ip_resolve": [
                          "Succeeded"
                        ]
                      },
                      "type": "If"
                    },
                    "For_each_ip_resolve": {
                      "actions": {
                        "Append_to_array_variable_2": {
                          "inputs": {
                            "name": "ip_results",
                            "value": {
                              "First": "@item()?['firstSeen']",
                              "Last": "@item()?['lastSeen']",
                              "Type": "@items('For_each_ip_resolve')?['recordType']",
                              "Value": "@items('For_each_ip_resolve')?['resolve']"
                            }
                          },
                          "type": "AppendToArrayVariable"
                        }
                      },
                      "foreach": "@body('Get_passive_DNS_2')?['results']",
                      "runAfter": {
                        "Get_passive_DNS_2": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_passive_DNS_2": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/dns/passive",
                        "queries": {
                          "query": "@items('For_each_ip')?['Address']",
                          "start": "@variables('lookback')",
                          "timeout": 7
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                  "runAfter": {
                    "Init_ip_comment": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Lookback_Period": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "lookback",
                        "type": "string",
                        "value": "@{formatDateTime(addDays(utcNow(), -7), 'yyyy-MM-dd')}"
                      }
                    ]
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_domain_comment": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "domain_comment",
                        "type": "string"
                      }
                    ]
                  },
                  "runAfter": {
                    "Init_domain_results": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_domain_results": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "domain_results",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_Hosts": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_ip_comment": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "ip_comment",
                        "type": "string"
                      }
                    ]
                  },
                  "runAfter": {
                    "Init_ip_results": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_ip_results": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "ip_results",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_IPs": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook5-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook5-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook5-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook5-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook6-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook6-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook6-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook6-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook6-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_Hosts": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/host"
                  },
                  "runAfter": {
                    "Init_Lookback_Period": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_host": {
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>Last week of Passive DNS for @{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}<br> @{variables('domain_comment')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Condition": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Condition": {
                      "actions": {
                        "Create_Host_HTML_table": {
                          "inputs": {
                            "format": "HTML",
                            "from": "@variables('domain_results')"
                          },
                          "type": "Table"
                        },
                        "Set_domain_comment": {
                          "inputs": {
                            "name": "domain_comment",
                            "value": "@body('Create_Host_HTML_table')"
                          },
                          "runAfter": {
                            "Create_Host_HTML_table": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable"
                        }
                      },
                      "else": {
                        "actions": {
                          "Set_domain_comment_empty": {
                            "inputs": {
                              "name": "domain_comment",
                              "value": "No results found."
                            },
                            "type": "SetVariable"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(variables('domain_results'))",
                              0
                            ]
                          }
                        ]
                      },
                      "runAfter": {
                        "For_each_host_resolve": [
                          "Succeeded"
                        ]
                      },
                      "type": "If"
                    },
                    "For_each_host_resolve": {
                      "actions": {
                        "Append_to_array_variable": {
                          "inputs": {
                            "name": "domain_results",
                            "value": {
                              "First": "@body('Get_passive_DNS')?['firstSeen']",
                              "Last": "@body('Get_passive_DNS')?['lastSeen']",
                              "Type": "@items('For_each_host_resolve')?['recordType']",
                              "Value": "@items('For_each_host_resolve')?['resolve']"
                            }
                          },
                          "type": "AppendToArrayVariable"
                        }
                      },
                      "foreach": "@body('Get_passive_DNS')?['results']",
                      "runAfter": {
                        "Get_passive_DNS": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_passive_DNS": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/dns/passive",
                        "queries": {
                          "query": "@{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}",
                          "start": "@variables('lookback')",
                          "timeout": 7
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                  "runAfter": {
                    "Init_domain_comment": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Lookback_Period": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "lookback",
                        "type": "string",
                        "value": "@{formatDateTime(addDays(utcNow(), -7), 'yyyy-MM-dd')}"
                      }
                    ]
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_domain_comment": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "domain_comment",
                        "type": "string"
                      }
                    ]
                  },
                  "runAfter": {
                    "Init_domain_results": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_domain_results": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "domain_results",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_Hosts": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook6-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook6-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook6-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook6-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook7-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook7-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook7-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook7-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook7-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_IPs": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/ip"
                  },
                  "runAfter": {
                    "Init_Lookback_Period": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_ip": {
                  "actions": {
                    "Add_comment_to_incident_(V3)_2": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>Last week of Passive DNS for @{items('For_each_ip')?['Address']}<br> @{variables('ip_comment')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Condition_2": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Condition_2": {
                      "actions": {
                        "Create_IP_HTML_table": {
                          "inputs": {
                            "format": "HTML",
                            "from": "@variables('ip_results')"
                          },
                          "type": "Table"
                        },
                        "Set_ip_comment": {
                          "inputs": {
                            "name": "ip_comment",
                            "value": "@body('Create_IP_HTML_table')"
                          },
                          "runAfter": {
                            "Create_IP_HTML_table": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable"
                        }
                      },
                      "else": {
                        "actions": {
                          "Set_variable": {
                            "inputs": {
                              "name": "ip_comment",
                              "value": "No results found."
                            },
                            "type": "SetVariable"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(variables('ip_results'))",
                              0
                            ]
                          }
                        ]
                      },
                      "runAfter": {
                        "For_each_ip_resolve": [
                          "Succeeded"
                        ]
                      },
                      "type": "If"
                    },
                    "For_each_ip_resolve": {
                      "actions": {
                        "Append_to_array_variable_2": {
                          "inputs": {
                            "name": "ip_results",
                            "value": {
                              "First": "@item()?['firstSeen']",
                              "Last": "@item()?['lastSeen']",
                              "Type": "@items('For_each_ip_resolve')?['recordType']",
                              "Value": "@items('For_each_ip_resolve')?['resolve']"
                            }
                          },
                          "type": "AppendToArrayVariable"
                        }
                      },
                      "foreach": "@body('Get_passive_DNS_2')?['results']",
                      "runAfter": {
                        "Get_passive_DNS_2": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_passive_DNS_2": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/dns/passive",
                        "queries": {
                          "query": "@items('For_each_ip')?['Address']",
                          "start": "@variables('lookback')",
                          "timeout": 7
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                  "runAfter": {
                    "Init_ip_comment": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Lookback_Period": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "lookback",
                        "type": "string",
                        "value": "@{formatDateTime(addDays(utcNow(), -7), 'yyyy-MM-dd')}"
                      }
                    ]
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_ip_comment": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "ip_comment",
                        "type": "string"
                      }
                    ]
                  },
                  "runAfter": {
                    "Init_ip_results": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_ip_results": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "ip_results",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_IPs": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook7-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook7-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook7-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook7-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook8-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook8-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook8-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook8-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook8-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_Hosts": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/host"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_IPs": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/ip"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_Host": {
                  "actions": {
                    "Add_comment_to_incident_(V3)_2": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>Host Summary<br> @{body('Create_Host_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_Host_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Create_Host_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_host')"
                      },
                      "runAfter": {
                        "Format_Host_Record": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "Format_Host_Record": {
                      "inputs": {
                        "name": "result_output_host",
                        "value": [
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['resolutions']?['count']",
                            "Dataset": "Resolutions",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['resolutions']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['certificates']?['count']",
                            "Dataset": "Certificates",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['certificates']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['trackers']?['count']",
                            "Dataset": "Trackers",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['trackers']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['components']?['count']",
                            "Dataset": "Components",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['components']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['host_pairs']?['count']",
                            "Dataset": "Host Pairs",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['host_pairs']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['cookies']?['count']",
                            "Dataset": "Cookies",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['cookies']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['hashes']?['count']",
                            "Dataset": "Hashes",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['hashes']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['articles']?['count']",
                            "Dataset": "Articles",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['articles']?['link']"
                          }
                        ]
                      },
                      "runAfter": {
                        "Get_summary_data_card_host": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable"
                    },
                    "Get_summary_data_card_host": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/cards/summary",
                        "queries": {
                          "query": "@items('For_each_Host')?['DnsDomain']"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                  "runAfter": {
                    "Init_Result_Host": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "For_each_IP_Address": {
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>IP Summary<br> @{body('Create_IP_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_IP_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Create_IP_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_ip')"
                      },
                      "runAfter": {
                        "Format_IP_Record": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "Format_IP_Record": {
                      "inputs": {
                        "name": "result_output_ip",
                        "value": [
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['resolutions']?['count']",
                            "Dataset": "Resolutions",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['resolutions']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['certificates']?['count']",
                            "Dataset": "Certificates",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['certificates']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['trackers']?['count']",
                            "Dataset": "Trackers",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['trackers']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['components']?['count']",
                            "Dataset": "Components",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['components']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['host_pairs']?['count']",
                            "Dataset": "Host Pairs",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['host_pairs']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['cookies']?['count']",
                            "Dataset": "Cookies",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['cookies']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['services']?['count']",
                            "Dataset": "Services",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['services']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['reverse_dns']?['count']",
                            "Dataset": "DNS",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['reverse_dns']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['hashes']?['count']",
                            "Dataset": "Hashes",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['hashes']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['articles']?['count']",
                            "Dataset": "Articles",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['articles']?['link']"
                          }
                        ]
                      },
                      "runAfter": {
                        "Get_summary_data_card_ip": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable"
                    },
                    "Get_summary_data_card_ip": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/cards/summary",
                        "queries": {
                          "query": "@items('For_each_IP_Address')?['Address']"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                  "runAfter": {
                    "Init_Result_IP": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Result_Host": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_host",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_Hosts": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_Result_IP": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_ip",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_IPs": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook8-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook8-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook8-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook8-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook9-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook9-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook9-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook9-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook9-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_Hosts": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/host"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_Host": {
                  "actions": {
                    "Add_comment_to_incident_(V3)_2": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>Host Summary<br> @{body('Create_Host_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_Host_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Create_Host_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_host')"
                      },
                      "runAfter": {
                        "Format_Host_Record": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "Format_Host_Record": {
                      "inputs": {
                        "name": "result_output_host",
                        "value": [
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['resolutions']?['count']",
                            "Dataset": "Resolutions",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['resolutions']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['certificates']?['count']",
                            "Dataset": "Certificates",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['certificates']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['trackers']?['count']",
                            "Dataset": "Trackers",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['trackers']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['components']?['count']",
                            "Dataset": "Components",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['components']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['host_pairs']?['count']",
                            "Dataset": "Host Pairs",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['host_pairs']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['cookies']?['count']",
                            "Dataset": "Cookies",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['cookies']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['hashes']?['count']",
                            "Dataset": "Hashes",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['hashes']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_host')?['data_summary']?['articles']?['count']",
                            "Dataset": "Articles",
                            "Link": "@body('Get_summary_data_card_host')?['data_summary']?['articles']?['link']"
                          }
                        ]
                      },
                      "runAfter": {
                        "Get_summary_data_card_host": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable"
                    },
                    "Get_summary_data_card_host": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/cards/summary",
                        "queries": {
                          "query": "@items('For_each_Host')?['DnsDomain']"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                  "runAfter": {
                    "Init_Result_Host": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Result_Host": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_host",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_Hosts": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook9-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook9-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook9-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook9-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook10-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook10-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook10-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook10-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook10-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_IPs": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/ip"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_IP_Address": {
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>IP Summary<br> @{body('Create_IP_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_IP_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Create_IP_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_ip')"
                      },
                      "runAfter": {
                        "Format_IP_Record": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "Format_IP_Record": {
                      "inputs": {
                        "name": "result_output_ip",
                        "value": [
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['resolutions']?['count']",
                            "Dataset": "Resolutions",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['resolutions']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['certificates']?['count']",
                            "Dataset": "Certificates",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['certificates']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['trackers']?['count']",
                            "Dataset": "Trackers",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['trackers']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['components']?['count']",
                            "Dataset": "Components",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['components']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['host_pairs']?['count']",
                            "Dataset": "Host Pairs",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['host_pairs']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['cookies']?['count']",
                            "Dataset": "Cookies",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['cookies']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['services']?['count']",
                            "Dataset": "Services",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['services']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['reverse_dns']?['count']",
                            "Dataset": "DNS",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['reverse_dns']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['hashes']?['count']",
                            "Dataset": "Hashes",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['hashes']?['link']"
                          },
                          {
                            "Count": "@body('Get_summary_data_card_ip')?['data_summary']?['articles']?['count']",
                            "Dataset": "Articles",
                            "Link": "@body('Get_summary_data_card_ip')?['data_summary']?['articles']?['link']"
                          }
                        ]
                      },
                      "runAfter": {
                        "Get_summary_data_card_ip": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable"
                    },
                    "Get_summary_data_card_ip": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/cards/summary",
                        "queries": {
                          "query": "@items('For_each_IP_Address')?['Address']"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                  "runAfter": {
                    "Init_Result_IP": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Result_IP": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_ip",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_IPs": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook10-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook10-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook10-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook10-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook11-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook11-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook11-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook11-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook11-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_Hosts": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/host"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_IPs": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/ip"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_host": {
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>Associated WHOIS record for @{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}:<br> <br> Registrar: @{body('Get_WHOIS')?['registrar']}<br> Registered:@{body('Get_WHOIS')?['registered']}<br> Expires: @{body('Get_WHOIS')?['expiresAt']}<br> Contact: @{body('Get_WHOIS')?['contactEmail']}<br> Nameservers: @{body('Get_WHOIS')?['nameServers']}<br> <br> To search on WHOIS data or view historic records, see https://community.riskiq.com/search/@{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}/whois</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Get_WHOIS": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Get_WHOIS": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/whois",
                        "queries": {
                          "query": "@{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                  "runAfter": {
                    "Entities_-_Get_Hosts": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "For_each_ip": {
                  "actions": {
                    "Add_comment_to_incident_(V3)_2": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>Associated WHOIS record for @{items('For_each_ip')?['Address']}:<br> <br> Registrar: @{body('Get_WHOIS_IP')?['registrar']}<br> Registered:@{body('Get_WHOIS_IP')?['registered']}<br> Expires: @{body('Get_WHOIS_IP')?['expiresAt']}<br> Contact: @{body('Get_WHOIS_IP')?['contactEmail']}<br> Nameservers: @{body('Get_WHOIS_IP')?['nameServers']}<br> <br> To search on WHOIS data or view historic records, see https://community.riskiq.com/search/@{items('For_each_ip')?['Address']}/whois</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Get_WHOIS_IP": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Get_WHOIS_IP": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/whois",
                        "queries": {
                          "query": "@items('For_each_ip')?['Address']"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                  "runAfter": {
                    "Entities_-_Get_IPs": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook11-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook11-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook11-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook11-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook12-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook12-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook12-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook12-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook12-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_Hosts": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/host"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_host": {
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>Associated WHOIS record for @{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}:<br> <br> Registrar: @{body('Get_WHOIS')?['registrar']}<br> Registered:@{body('Get_WHOIS')?['registered']}<br> Expires: @{body('Get_WHOIS')?['expiresAt']}<br> Contact: @{body('Get_WHOIS')?['contactEmail']}<br> Nameservers: @{body('Get_WHOIS')?['nameServers']}<br> <br> To search on WHOIS data or view historic records, see https://community.riskiq.com/search/@{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}/whois</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Get_WHOIS": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Get_WHOIS": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/whois",
                        "queries": {
                          "query": "@{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                  "runAfter": {
                    "Entities_-_Get_Hosts": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook12-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook12-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook12-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook12-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook13-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook13-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook13-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook13-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook13-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_IPs": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/ip"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_ip": {
                  "actions": {
                    "Add_comment_to_incident_(V3)_2": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>Associated WHOIS record for @{items('For_each_ip')?['Address']}:<br> <br> Registrar: @{body('Get_WHOIS_IP')?['registrar']}<br> Registered:@{body('Get_WHOIS_IP')?['registered']}<br> Expires: @{body('Get_WHOIS_IP')?['expiresAt']}<br> Contact: @{body('Get_WHOIS_IP')?['contactEmail']}<br> Nameservers: @{body('Get_WHOIS_IP')?['nameServers']}<br> <br> To search on WHOIS data or view historic records, see https://community.riskiq.com/search/@{items('For_each_ip')?['Address']}/whois</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Get_WHOIS_IP": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Get_WHOIS_IP": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/whois",
                        "queries": {
                          "query": "@items('For_each_ip')?['Address']"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                  "runAfter": {
                    "Entities_-_Get_IPs": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook13-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook13-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook13-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook13-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook14-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook14-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook14-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook14-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook14-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_Hosts": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/host"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_IPs": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/ip"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_Host": {
                  "actions": {
                    "Add_comment_to_incident_(V3)_2": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>Threat Article Results: @{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}<br> @{body('Create_Host_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_Host_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Create_Host_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_host')"
                      },
                      "runAfter": {
                        "For_each_host_article": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "For_each_host_article": {
                      "actions": {
                        "Append_to_host_array": {
                          "inputs": {
                            "name": "result_output_host",
                            "value": {
                              "Link": "@item()['link']",
                              "Title": "@item()['title']"
                            }
                          },
                          "type": "AppendToArrayVariable"
                        }
                      },
                      "foreach": "@body('Get_articles_by_indicator_host')?['articles']",
                      "runAfter": {
                        "Get_articles_by_indicator_host": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_articles_by_indicator_host": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/articles/indicator",
                        "queries": {
                          "query": "@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                  "runAfter": {
                    "Init_Result_Host": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "For_each_IP_Address": {
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>Threat Article Results: @{items('For_each_IP_Address')?['Address']}<br> @{body('Create_IP_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_IP_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Create_IP_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_ip')"
                      },
                      "runAfter": {
                        "For_each_ip_article": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "For_each_ip_article": {
                      "actions": {
                        "Append_to_array_variable": {
                          "inputs": {
                            "name": "result_output_ip",
                            "value": {
                              "Link": "@item()['link']",
                              "Title": "@item()['title']"
                            }
                          },
                          "type": "AppendToArrayVariable"
                        }
                      },
                      "foreach": "@body('Get_articles_by_indicator_ip')?['articles']",
                      "runAfter": {
                        "Get_articles_by_indicator_ip": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_articles_by_indicator_ip": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/articles/indicator",
                        "queries": {
                          "query": "@items('For_each_IP_Address')?['Address']"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                  "runAfter": {
                    "Init_Result_IP": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Result_Host": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_host",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_Hosts": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_Result_IP": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_ip",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_IPs": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook14-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook14-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook14-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook14-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook15-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook15-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook15-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook15-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook15-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_Hosts": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/host"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_Host": {
                  "actions": {
                    "Add_comment_to_incident_(V3)_2": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>Threat Article Results: @{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}<br> @{body('Create_Host_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_Host_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Create_Host_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_host')"
                      },
                      "runAfter": {
                        "For_each_host_article": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "For_each_host_article": {
                      "actions": {
                        "Append_to_host_array": {
                          "inputs": {
                            "name": "result_output_host",
                            "value": {
                              "Link": "@item()['link']",
                              "Title": "@item()['title']"
                            }
                          },
                          "type": "AppendToArrayVariable"
                        }
                      },
                      "foreach": "@body('Get_articles_by_indicator_host')?['articles']",
                      "runAfter": {
                        "Get_articles_by_indicator_host": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_articles_by_indicator_host": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/articles/indicator",
                        "queries": {
                          "query": "@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                  "runAfter": {
                    "Init_Result_Host": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Result_Host": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_host",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_Hosts": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook15-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook15-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook15-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook15-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook16-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook16-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook16-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook16-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook16-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_IPs": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/ip"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_IP_Address": {
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>Threat Article Results: @{items('For_each_IP_Address')?['Address']}<br> @{body('Create_IP_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_IP_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Create_IP_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_ip')"
                      },
                      "runAfter": {
                        "For_each_ip_article": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "For_each_ip_article": {
                      "actions": {
                        "Append_to_array_variable": {
                          "inputs": {
                            "name": "result_output_ip",
                            "value": {
                              "Link": "@item()['link']",
                              "Title": "@item()['title']"
                            }
                          },
                          "type": "AppendToArrayVariable"
                        }
                      },
                      "foreach": "@body('Get_articles_by_indicator_ip')?['articles']",
                      "runAfter": {
                        "Get_articles_by_indicator_ip": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_articles_by_indicator_ip": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/articles/indicator",
                        "queries": {
                          "query": "@items('For_each_IP_Address')?['Address']"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                  "runAfter": {
                    "Init_Result_IP": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Result_IP": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_ip",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_IPs": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook16-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook16-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook16-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook16-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook17-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook17-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook17-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook17-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook17-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_Hosts": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/host"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_IPs": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/ip"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_Host": {
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>RiskIQ Reputation: @{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}<br> Classification: @{body('Get_reputation_for_host')?['classification']} (@{body('Get_reputation_for_host')?['score']})<br> @{body('Create_Host_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_Host_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Create_Host_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_host')"
                      },
                      "runAfter": {
                        "Set_host_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "Get_reputation_for_host": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/reputation",
                        "queries": {
                          "query": "@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}"
                        }
                      },
                      "type": "ApiConnection"
                    },
                    "Set_host_variable": {
                      "inputs": {
                        "name": "result_output_host",
                        "value": "@body('Get_reputation_for_host')?['rules']"
                      },
                      "runAfter": {
                        "Get_reputation_for_host": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                  "runAfter": {
                    "Init_Result_Host": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "For_each_IP_Address": {
                  "actions": {
                    "Add_comment_to_incident_(V3)_2": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>RiskIQ Reputation: @{items('For_each_IP_Address')?['Address']}<br> Classification: @{body('Get_reputation')?['classification']} (@{body('Get_reputation')?['score']})<br> @{body('Create_IP_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_IP_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Create_IP_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_ip')"
                      },
                      "runAfter": {
                        "Set_ip_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "Get_reputation": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/reputation",
                        "queries": {
                          "query": "@items('For_each_IP_Address')?['Address']"
                        }
                      },
                      "type": "ApiConnection"
                    },
                    "Set_ip_variable": {
                      "inputs": {
                        "name": "result_output_ip",
                        "value": "@body('Get_reputation')?['rules']"
                      },
                      "runAfter": {
                        "Get_reputation": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                  "runAfter": {
                    "Init_Result_IP": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Result_Host": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_host",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_Hosts": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_Result_IP": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_ip",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_IPs": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook17-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook17-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook17-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook17-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook18-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook18-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook18-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook18-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook18-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_Hosts": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/host"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_Host": {
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>RiskIQ Reputation: @{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}<br> Classification: @{body('Get_reputation_for_host')?['classification']} (@{body('Get_reputation_for_host')?['score']})<br> @{body('Create_Host_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_Host_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Create_Host_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_host')"
                      },
                      "runAfter": {
                        "Set_host_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "Get_reputation_for_host": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/reputation",
                        "queries": {
                          "query": "@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}"
                        }
                      },
                      "type": "ApiConnection"
                    },
                    "Set_host_variable": {
                      "inputs": {
                        "name": "result_output_host",
                        "value": "@body('Get_reputation_for_host')?['rules']"
                      },
                      "runAfter": {
                        "Get_reputation_for_host": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                  "runAfter": {
                    "Init_Result_Host": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Result_Host": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_host",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_Hosts": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook18-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook18-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook18-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook18-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook19-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook19-AzureSentinelConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-2-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook19-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook19-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook19-AzureSentinelConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "Alert_-_Get_incident": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  },
                  "type": "ApiConnection"
                },
                "Entities_-_Get_IPs": {
                  "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/entities/ip"
                  },
                  "runAfter": {
                    "Alert_-_Get_incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection"
                },
                "For_each_IP_Address": {
                  "actions": {
                    "Add_comment_to_incident_(V3)_2": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>RiskIQ Reputation: @{items('For_each_IP_Address')?['Address']}<br> Classification: @{body('Get_reputation')?['classification']} (@{body('Get_reputation')?['score']})<br> @{body('Create_IP_HTML_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_IP_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Create_IP_HTML_table": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('result_output_ip')"
                      },
                      "runAfter": {
                        "Set_ip_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "Get_reputation": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/reputation",
                        "queries": {
                          "query": "@items('For_each_IP_Address')?['Address']"
                        }
                      },
                      "type": "ApiConnection"
                    },
                    "Set_ip_variable": {
                      "inputs": {
                        "name": "result_output_ip",
                        "value": "@body('Get_reputation')?['rules']"
                      },
                      "runAfter": {
                        "Get_reputation": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable"
                    }
                  },
                  "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                  "runAfter": {
                    "Init_Result_IP": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Init_Result_IP": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "result_output_ip",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Entities_-_Get_IPs": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                  "inputs": {
                    "body": {
                      "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "path": "/subscribe"
                  },
                  "type": "ApiConnectionWebhook"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook19-AzureSentinelConnectionName'))]",
                    "connectionName": "[variables('playbook19-AzureSentinelConnectionName')]",
                    "id": "[variables('_playbook-2-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook19-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook19-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook20-RiskIQConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-1')]"
            }
          }
        },
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2018-07-01-preview",
          "name": "[variables('playbook20-MicrosoftGraphSecurityConnectionName')]",
          "location": "[parameters('workspace-location')]",
          "properties": {
            "api": {
              "id": "[variables('_playbook-1-connection-2')]"
            }
          }
        },
        {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2019-05-01",
          "name": "[parameters('playbook20-PlaybookName')]",
          "location": "[parameters('workspace-location')]",
          "tags": {
            "LogicAppsCategory": "security"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('playbook20-RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('playbook20-MicrosoftGraphSecurityConnectionName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "definition": {
              "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
              "actions": {
                "For_each_indicator_type": {
                  "actions": {
                    "Switch": {
                      "cases": {
                        "Domain_Case": {
                          "actions": {
                            "For_each_domain": {
                              "actions": {
                                "Append_to_domains": {
                                  "inputs": {
                                    "name": "domains",
                                    "value": {
                                      "action": "alert",
                                      "additionalInformation": "@body('Get_article_details')?['link']",
                                      "description": "@body('Get_article_details')?['title']",
                                      "domainName": "@items('For_each_domain')",
                                      "expirationDateTime": "@addDays(utcNow(), 30)",
                                      "targetProduct": "Azure Sentinel",
                                      "threatType": "WatchList",
                                      "tlpLevel": "green"
                                    }
                                  },
                                  "type": "AppendToArrayVariable"
                                }
                              },
                              "foreach": "@items('For_each_indicator_type')?['values']",
                              "type": "Foreach"
                            },
                            "Submit_multiple_domain_tiIndicators": {
                              "inputs": {
                                "body": {
                                  "value": "@variables('domains')"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/beta/security/tiIndicators/submitTiIndicators"
                              },
                              "runAfter": {
                                "For_each_domain": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection"
                            }
                          },
                          "case": "domain"
                        },
                        "IP_Case": {
                          "actions": {
                            "For_each_ip": {
                              "actions": {
                                "Append_to_ip_addresses": {
                                  "inputs": {
                                    "name": "ip",
                                    "value": {
                                      "action": "alert",
                                      "additionalInformation": "@body('Get_article_details')?['link']",
                                      "description": "@body('Get_article_details')?['title']",
                                      "expirationDateTime": "@addDays(utcNow(), 30)",
                                      "networkDestinationIPv4": "@items('For_each_ip')",
                                      "targetProduct": "Azure Sentinel",
                                      "threatType": "WatchList",
                                      "tlpLevel": "green"
                                    }
                                  },
                                  "type": "AppendToArrayVariable"
                                }
                              },
                              "foreach": "@items('For_each_indicator_type')?['values']",
                              "type": "Foreach"
                            },
                            "Submit_multiple_ip_tiIndicators": {
                              "inputs": {
                                "body": {
                                  "value": "@variables('ip')"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/beta/security/tiIndicators/submitTiIndicators"
                              },
                              "runAfter": {
                                "For_each_ip": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection"
                            }
                          },
                          "case": "ip"
                        },
                        "URLs_Case": {
                          "actions": {
                            "For_each_url": {
                              "actions": {
                                "Append_to_urls": {
                                  "inputs": {
                                    "name": "urls",
                                    "value": {
                                      "action": "alert",
                                      "additionalInformation": "@body('Get_article_details')?['link']",
                                      "description": "@body('Get_article_details')?['title']",
                                      "expirationDateTime": "@addDays(utcNow(), 30)",
                                      "targetProduct": "Azure Sentinel",
                                      "threatType": "WatchList",
                                      "tlpLevel": "green",
                                      "url": "@items('For_each_url')"
                                    }
                                  },
                                  "type": "AppendToArrayVariable"
                                }
                              },
                              "foreach": "@items('For_each_indicator_type')?['values']",
                              "type": "Foreach"
                            },
                            "Submit_multiple_url_tiIndicators": {
                              "inputs": {
                                "body": {
                                  "value": "@variables('urls')"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/beta/security/tiIndicators/submitTiIndicators"
                              },
                              "runAfter": {
                                "For_each_url": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection"
                            }
                          },
                          "case": "url"
                        }
                      },
                      "expression": "@items('For_each_indicator_type')?['type']",
                      "type": "Switch"
                    }
                  },
                  "foreach": "@body('Get_article_details')?['indicators']",
                  "runAfter": {
                    "Init_domains": [
                      "Succeeded"
                    ],
                    "Init_ip_addresses": [
                      "Succeeded"
                    ],
                    "Init_urls": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Get_article_details": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['riskiqpassivetotal']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/articles/@{encodeURIComponent(triggerBody()?['guid'])}"
                  },
                  "type": "ApiConnection"
                },
                "Init_domains": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "domains",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Get_article_details": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_ip_addresses": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "ip",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Get_article_details": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                },
                "Init_urls": {
                  "inputs": {
                    "variables": [
                      {
                        "name": "urls",
                        "type": "array"
                      }
                    ]
                  },
                  "runAfter": {
                    "Get_article_details": [
                      "Succeeded"
                    ]
                  },
                  "type": "InitializeVariable"
                }
              },
              "contentVersion": "1.0.0.0",
              "parameters": {
                "$connections": {
                  "type": "Object"
                }
              },
              "triggers": {
                "manual": {
                  "inputs": {
                    "schema": {
                      "properties": {
                        "guid": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "kind": "Http",
                  "type": "Request"
                }
              }
            },
            "parameters": {
              "$connections": {
                "value": {
                  "microsoftgraphsecurity": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook20-MicrosoftGraphSecurityConnectionName'))]",
                    "connectionName": "[variables('playbook20-MicrosoftGraphSecurityConnectionName')]",
                    "id": "[variables('_playbook-1-connection-2')]"
                  },
                  "riskiqpassivetotal": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook20-RiskIQConnectionName'))]",
                    "connectionName": "[variables('playbook20-RiskIQConnectionName')]",
                    "id": "[variables('_playbook-1-connection-1')]"
                  }
                }
              }
            }
          }
        }
      ],
      "outputs": {}
    },
    "resourceGroup": "ResourceGroup",
    "parameters": {
      "location": {
        "value": "[parameters('enableRiskIQSolutions_location')]"
      },
      "workspace-location": {
        "value": "[parameters('enableRiskIQSolutions_workspace-location')]"
      },
      "playbook2-PlaybookName": {
        "value": "Sentinel-Incident-Action-RiskIQ-Reputation-All"
      },
      "playbook3-PlaybookName": {
        "value": "Sentinel-Incident-Action-RiskIQ-Reputation-Domain"
      },
      "playbook4-PlaybookName": {
        "value": "Sentinel-Incident-Action-RiskIQ-Reputation-IP"
      },
      "playbook5-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Data-PassiveDns-All"
      },
      "playbook6-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Data-PassiveDns-Domain"
      },
      "playbook7-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Data-PassiveDns-IP"
      },
      "playbook8-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Data-Summary-All"
      },
      "playbook9-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Data-Summary-Domain"
      },
      "playbook10-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Data-Summary-IP"
      },
      "playbook11-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Data-Whois-All"
      },
      "playbook12-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Data-Whois-Domain"
      },
      "playbook13-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Data-Whois-IP"
      },
      "playbook14-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Intel-Summary-All"
      },
      "playbook15-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Intel-Summary-Domain"
      },
      "playbook16-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Intel-Summary-IP"
      },
      "playbook17-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Reputation-Summary-All"
      },
      "playbook18-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Reputation-Summary-Domain"
      },
      "playbook19-PlaybookName": {
        "value": "Sentinel-Incident-Enrich-RiskIQ-Reputation-Summary-IP"
      },
      "playbook20-PlaybookName": {
        "value": "Sentinel-Intel-Action-RiskIQ-Intel-Article-Ingest"
      }
    }
  }
}